{"version":3,"file":"little-planet.js","sources":["../../src/adapters/little-planet/index.js"],"sourcesContent":["import { MathUtils, Matrix4, Mesh, PlaneBufferGeometry, Quaternion, ShaderMaterial, Texture, Vector3 } from 'three';\nimport { CONSTANTS, DEFAULTS, EquirectangularAdapter } from '../..';\n\n\nDEFAULTS.moveSpeed = 2;\n\nconst AXIS_X = new Vector3(1, 0, 0);\nconst AXIS_Y = new Vector3(0, 1, 0);\n\n\n/**\n * @summary Adapter for equirectangular panoramas displayed with little planet effect\n * @memberof PSV.adapters\n * @extends PSV.adapters.AbstractAdapter\n */\nexport class LittlePlanetAdapter extends EquirectangularAdapter {\n\n  static id = 'little-planet';\n  static supportsOverlay = false;\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv);\n\n    this.psv.prop.littlePlanet = true;\n\n    this.prop = {\n      quatA   : new Quaternion(),\n      quatB   : new Quaternion(),\n      quatC   : new Quaternion(),\n      position: { longitude: 0, latitude: 0 },\n    };\n\n    this.psv.on(CONSTANTS.EVENTS.SIZE_UPDATED, this);\n    this.psv.on(CONSTANTS.EVENTS.ZOOM_UPDATED, this);\n    this.psv.on(CONSTANTS.EVENTS.POSITION_UPDATED, this);\n  }\n\n  /**\n   * @override\n   */\n  supportsTransition() {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  supportsPreload() {\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      case CONSTANTS.EVENTS.SIZE_UPDATED:\n        this.__setResolution(e.args[0]);\n        break;\n      case CONSTANTS.EVENTS.ZOOM_UPDATED:\n        this.__setZoom(e.args[0]);\n        break;\n      case CONSTANTS.EVENTS.POSITION_UPDATED:\n        this.__setPosition(e.args[0]);\n        break;\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @param {PSV.Size} size\n   * @private\n   */\n  __setResolution(size) {\n    this.uniforms.resolution.value = size.width / size.height;\n  }\n\n  /**\n   * @param {integer} zoom\n   * @private\n   */\n  __setZoom(zoom) {\n    this.uniforms.zoom.value = MathUtils.mapLinear(zoom, 0, 100, 50, 2);\n  }\n\n  /**\n   * @param {PSV.Position} position\n   * @private\n   */\n  __setPosition(position) {\n    this.prop.quatA.setFromAxisAngle(AXIS_Y, this.prop.position.longitude - position.longitude);\n    this.prop.quatB.setFromAxisAngle(AXIS_X, -this.prop.position.latitude + position.latitude);\n    this.prop.quatC.multiply(this.prop.quatA).multiply(this.prop.quatB);\n    this.uniforms.transform.value.makeRotationFromQuaternion(this.prop.quatC);\n    this.prop.position = position;\n  }\n\n  /**\n   * @override\n   */\n  createMesh() {\n    const geometry = new PlaneBufferGeometry(20, 10)\n      .translate(0, 0, -1);\n\n    // this one was copied from https://github.com/pchen66/panolens.js\n    const material = new ShaderMaterial({\n      uniforms: {\n        tDiffuse  : { value: new Texture() },\n        resolution: { value: 2.0 },\n        transform : { value: new Matrix4() },\n        zoom      : { value: 10.0 },\n        opacity   : { value: 1.0 },\n      },\n\n      vertexShader: `\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = vec4( position, 1.0 );\n}`,\n\n      fragmentShader: `\nuniform sampler2D tDiffuse;\nuniform float resolution;\nuniform mat4 transform;\nuniform float zoom;\nuniform float opacity;\n\nvarying vec2 vUv;\n\nconst float PI = 3.1415926535897932384626433832795;\n\nvoid main() {\n  vec2 position = -1.0 +  2.0 * vUv;\n  position *= vec2( zoom * resolution, zoom * 0.5 );\n\n  float x2y2 = position.x * position.x + position.y * position.y;\n  vec3 sphere_pnt = vec3( 2. * position, x2y2 - 1. ) / ( x2y2 + 1. );\n  sphere_pnt = vec3( transform * vec4( sphere_pnt, 1.0 ) );\n\n  vec2 sampleUV = vec2(\n    (atan(sphere_pnt.y, sphere_pnt.x) / PI + 1.0) * 0.5,\n    (asin(sphere_pnt.z) / PI + 0.5)\n  );\n\n  gl_FragColor = texture2D( tDiffuse, sampleUV );\n  gl_FragColor.a *= opacity;\n}`,\n    });\n\n    this.uniforms = material.uniforms;\n\n    this.__setPosition({\n      longitude: this.psv.config.defaultLong,\n      latitude : this.psv.config.defaultLat,\n    });\n\n    this.__setZoom(this.psv.config.defaultZoomLvl);\n\n    return new Mesh(geometry, material);\n  }\n\n  /**\n   * @override\n   */\n  setTexture(mesh, textureData) {\n    mesh.material.uniforms.tDiffuse.value.dispose();\n    mesh.material.uniforms.tDiffuse.value = textureData.texture;\n  }\n\n}\n"],"names":["DEFAULTS","moveSpeed","AXIS_X","Vector3","AXIS_Y","LittlePlanetAdapter","psv","prop","littlePlanet","quatA","Quaternion","quatB","quatC","position","longitude","latitude","on","CONSTANTS","EVENTS","SIZE_UPDATED","ZOOM_UPDATED","POSITION_UPDATED","supportsTransition","supportsPreload","handleEvent","e","type","__setResolution","args","__setZoom","__setPosition","size","uniforms","resolution","value","width","height","zoom","MathUtils","mapLinear","setFromAxisAngle","multiply","transform","makeRotationFromQuaternion","createMesh","geometry","PlaneBufferGeometry","translate","material","ShaderMaterial","tDiffuse","Texture","Matrix4","opacity","vertexShader","fragmentShader","config","defaultLong","defaultLat","defaultZoomLvl","Mesh","setTexture","mesh","textureData","dispose","texture","EquirectangularAdapter","id","supportsOverlay"],"mappings":"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"}