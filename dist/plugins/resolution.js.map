{"version":3,"file":"resolution.js","sources":["../../src/plugins/resolution/constants.js","../../src/plugins/resolution/utils.js","../../src/plugins/resolution/index.js"],"sourcesContent":["/**\n * @summary Available events\n * @enum {string}\n * @memberof PSV.plugins.ResolutionPlugin\n * @constant\n */\nexport const EVENTS = {\n  /**\n   * @event resolution-changed\n   * @memberof PSV.plugins.ResolutionPlugin\n   * @summary Triggered when the resolution is changed\n   * @param {string} resolutionId\n   */\n  RESOLUTION_CHANGED: 'resolution-changed',\n};\n","/**\n * @summary Returns deep equality between objects\n * {@link https://gist.github.com/egardner/efd34f270cc33db67c0246e837689cb9}\n * @param obj1\n * @param obj2\n * @return {boolean}\n * @private\n */\nexport function deepEqual(obj1, obj2) {\n  if (obj1 === obj2) {\n    return true;\n  }\n  else if (isObject(obj1) && isObject(obj2)) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n      return false;\n    }\n    for (const prop of Object.keys(obj1)) {\n      if (!deepEqual(obj1[prop], obj2[prop])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else {\n    return false;\n  }\n}\n\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj != null;\n}\n","import { AbstractPlugin, CONSTANTS, DEFAULTS, PSVError } from '../..';\nimport { EVENTS } from './constants';\nimport { deepEqual } from './utils';\n\n\n/**\n * @typedef {Object} PSV.plugins.ResolutionPlugin.Resolution\n * @property {string} id\n * @property {string} label\n * @property {*} panorama\n */\n\n/**\n * @typedef {Object} PSV.plugins.ResolutionPlugin.Options\n * @property {PSV.plugins.ResolutionPlugin.Resolution[]} resolutions - list of available resolutions\n * @property {boolean} [showBadge=true] - show the resolution id as a badge on the settings button\n */\n\n\nDEFAULTS.lang.resolution = 'Quality';\n\n\nexport { EVENTS } from './constants';\n\n\n/**\n * @summary Adds a setting to choose between multiple resolutions of the panorama.\n * @extends PSV.plugins.AbstractPlugin\n * @memberof PSV.plugins\n */\nexport class ResolutionPlugin extends AbstractPlugin {\n\n  static id = 'resolution';\n\n  static EVENTS = EVENTS;\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.plugins.ResolutionPlugin.Options} options\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @type {PSV.plugins.SettingsPlugin}\n     * @readonly\n     * @private\n     */\n    this.settings = null;\n\n    /**\n     * @summary Available resolutions\n     * @member {PSV.plugins.ResolutionPlugin.Resolution[]}\n     */\n    this.resolutions = [];\n\n    /**\n     * @summary Available resolutions\n     * @member {Object.<string, PSV.plugins.ResolutionPlugin.Resolution>}\n     * @private\n     */\n    this.resolutionsById = {};\n\n    /**\n     * @type {Object}\n     * @property {string} resolution - Current resolution\n     * @private\n     */\n    this.prop = {\n      resolution: null,\n    };\n\n    /**\n     * @type {PSV.plugins.ResolutionPlugin.Options}\n     */\n    this.config = {\n      showBadge: true,\n      ...options,\n    };\n  }\n\n  /**\n   * @package\n   */\n  init() {\n    super.init();\n\n    this.settings = this.psv.getPlugin('settings');\n\n    if (!this.settings) {\n      throw new PSVError('Resolution plugin requires the Settings plugin');\n    }\n\n    this.settings.addSetting({\n      id     : ResolutionPlugin.id,\n      type   : 'options',\n      label  : this.psv.config.lang.resolution,\n      current: () => this.prop.resolution,\n      options: () => this.__getSettingsOptions(),\n      apply  : resolution => this.setResolution(resolution),\n      badge  : !this.config.showBadge ? null : () => this.prop.resolution,\n    });\n\n    this.psv.on(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\n\n    if (this.config.resolutions) {\n      this.setResolutions(this.config.resolutions);\n      delete this.config.resolutions;\n    }\n  }\n\n  /**\n   * @package\n   */\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\n\n    this.settings.removeSetting(ResolutionPlugin.id);\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    if (e.type === CONSTANTS.EVENTS.PANORAMA_LOADED) {\n      this.__refreshResolution();\n    }\n  }\n\n  /**\n   * @summary Changes the available resolutions\n   * @param {PSV.plugins.ResolutionPlugin.Resolution[]} resolutions\n   */\n  setResolutions(resolutions) {\n    this.resolutions = resolutions;\n    this.resolutionsById = {};\n\n    resolutions.forEach((resolution) => {\n      if (!resolution.id) {\n        throw new PSVError('Missing resolution id');\n      }\n      this.resolutionsById[resolution.id] = resolution;\n    });\n\n    this.__refreshResolution();\n  }\n\n  /**\n   * @summary Changes the current resolution\n   * @param {string} id\n   */\n  setResolution(id) {\n    if (!this.resolutionsById[id]) {\n      throw new PSVError(`Resolution ${id} unknown`);\n    }\n\n    return this.psv.setPanorama(this.resolutionsById[id].panorama, { transition: false, showLoader: false });\n  }\n\n  /**\n   * @summary Returns the current resolution\n   * @return {string}\n   */\n  getResolution() {\n    return this.prop.resolution;\n  }\n\n  /**\n   * @summary Updates current resolution on panorama load\n   * @private\n   */\n  __refreshResolution() {\n    const resolution = this.resolutions.find(r => deepEqual(this.psv.config.panorama, r.panorama));\n    if (this.prop.resolution !== resolution?.id) {\n      this.prop.resolution = resolution?.id;\n      this.settings?.updateBadge();\n      this.trigger(EVENTS.RESOLUTION_CHANGED, this.prop.resolution);\n    }\n  }\n\n  /**\n   * @summary Returns options for Settings plugin\n   * @return {PSV.plugins.SettingsPlugin.Option[]}\n   * @private\n   */\n  __getSettingsOptions() {\n    return this.resolutions\n      .map(resolution => ({\n        id   : resolution.id,\n        label: resolution.label,\n      }));\n  }\n\n}\n"],"names":["EVENTS","RESOLUTION_CHANGED","deepEqual","obj1","obj2","isObject","Object","keys","length","prop","obj","DEFAULTS","lang","resolution","ResolutionPlugin","psv","options","settings","resolutions","resolutionsById","config","showBadge","init","getPlugin","PSVError","addSetting","id","type","label","current","__getSettingsOptions","apply","setResolution","badge","on","CONSTANTS","PANORAMA_LOADED","setResolutions","destroy","off","removeSetting","handleEvent","e","__refreshResolution","forEach","setPanorama","panorama","transition","showLoader","getResolution","find","r","updateBadge","trigger","map","AbstractPlugin"],"mappings":"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"}